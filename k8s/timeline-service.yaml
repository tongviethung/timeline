# replica when don't have HPA
replicaCount: 1
# Type of application Job | Deployment
type: $DEPLOYMENT_TYPE

# Image to run
image:
  repository: $DOCKER_URL/$SERVICE_NAME
  pullPolicy: IfNotPresent
  tag: "$IMAGE_TAG"

# Application name
applicationName: "$SERVICE_NAME"

# Secret to pull image from private repository
imagePullSecrets: "regcred"

# Service to connect internal K8S
service:
  enabled: true
  type: ClusterIP
  port: 80
  containerPort: 8080

# Ingress to expose service to internet
managementIngress:
  enabled: false
  hosts: $MANAGEMENT_HOST
  path: $SERVICE_PATH/(.*)
  pathType: ImplementationSpecific
  annotations:
    konghq.com/plugins: ldap-oidc,iam-request-transformer-management

# Ingress to expose service to internet
externalIngress:
  enabled: true
  hosts: $EXTERNAL_HOST
  path: $SERVICE_PATH
  pathType: Prefix
#  annotations:
#    konghq.com/plugins: 116c-oidc

# Ingress to expose service to internet
integrationIngress:
  enabled: false
  hosts: $INTEGRATION_HOST
  path: $SERVICE_PATH/(.*)
  pathType: ImplementationSpecific
  annotations:
    konghq.com/plugins: integration-oidc,iam-request-transformer-integration

onboardingIngress:
  enabled: false

# Resource management
resources:
  limits:
    memory: 2Gi
  requests:
    cpu: 50m
    memory: 512Mi

# Health check
health:
  enabled: true
  livenessProbePath: $SERVICE_PATH/actuator/health/liveness
  readinessProbePath: $SERVICE_PATH/actuator/health/readiness

# Auto scaling
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Enable expose metrics
metrics:
  enabled: true
  port: 8080
  path: $SERVICE_PATH/actuator/prometheus

# Set Application env here
configMap:
  JAVA_OPTS: "-Dspring.profiles.active=$NAMESPACE -XX:MinRAMPercentage=60.0 -XX:MaxRAMPercentage=90.0 -XX:+HeapDumpOnOutOfMemoryError"

envFrom:
  -   configMapRef:
        name: cloud-config
  -   configMapRef:
        name: $SERVICE_NAME

# Set volumeMounts
volumeMounts: [ ]

# Set volumes
volumes: [ ]

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      -   weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                -   key: name
                    operator: In
                    values:
                      - $SERVICE_NAME
            topologyKey: kubernetes.io/hostname
